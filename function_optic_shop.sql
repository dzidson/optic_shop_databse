CREATE OR REPLACE FUNCTION GET_CLIENT_CODE(CLIENT) RETURNS TEXT AS $$
SELECT
UPPER(LEFT($1.last_name ,2)) || UPPER(LEFT($1.first_name,2)) || RIGHT($1.phone_number, 2)
FROM CLIENT;
$$ LANGUAGE SQL;

CREATE OR REPLACE FUNCTION GET_CLIENT_CODE2(IN ROW_CLIENT CLIENT, OUT P_CODE TEXT) AS $$
SELECT UPPER(LEFT(row_client.last_name ,2)) || UPPER(LEFT(row_client.first_name,2)) || RIGHT(row_client.phone_number, 2)
FROM CLIENT;
$$ LANGUAGE SQL;



CREATE OR REPLACE FUNCTION FRAME_BY_MANUFACTURER(MANUFACTURER_NAME TEXT) RETURNS
SETOF FRAME AS $$
SELECT * FROM FRAME WHERE manufacturer LIKE '%' || manufacturer_name || '%';
$$ LANGUAGE SQL;



CREATE OR REPLACE FUNCTION AVG_POWER_GLASSES() RETURNS NUMERIC(5,2) AS 
$$
BEGIN 
	RAISE NOTICE 'TO DAY IS %', CURRENT_DATE;
	RETURN AVG(diopter_left + diopter_right) FROM glasses;
END;
$$  LANGUAGE PLPGSQL;



CREATE OR REPLACE FUNCTION FRAME_POPULARITY_2() 
RETURNS TABLE(P_MANUFACTURER FRAME.MANUFACTURER % TYPE,
			  P_AMOUNT BIGINT) AS
$$
BEGIN
 RETURN QUERY
 SELECT f.manufacturer, COUNT(*) AS amount
 FROM frame AS f
 JOIN glasses AS g ON g.frame_id=f.frame_id
 GROUP BY f.manufacturer;
END;
$$ LANGUAGE PLPGSQL; 

CREATE OR REPLACE FUNCTION FRAME_POPULARITY_3(OUT P_MANUFACTURER FRAME.MANUFACTURER % TYPE,
											  OUT P_AMOUNT BIGINT) 
RETURNS SETOF record AS 
$$
BEGIN
 RETURN QUERY
 SELECT f.manufacturer, COUNT(*) AS amount
 FROM frame AS f
 JOIN glasses AS g ON g.frame_id=f.frame_id
 GROUP BY f.manufacturer;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION TOP_FRAME_GLASS() RETURNS
SETOF glasses AS 
$$
DECLARE TOP_MANUFACTURER TEXT; 

BEGIN
	SELECT F.MANUFACTURER INTO TOP_MANUFACTURER AS AMOUNT
	FROM FRAME AS F
	JOIN GLASSES AS G ON G.FRAME_ID = F.FRAME_ID
	GROUP BY F.MANUFACTURER
	ORDER BY COUNT(*) DESC
	LIMIT 1;

RETURN QUERY
	SELECT G.*
	FROM GLASSES AS G
	JOIN FRAME AS F ON F.FRAME_ID = G.FRAME_ID
	WHERE F.MANUFACTURER = TOP_MANUFACTURER;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION ADM_REINDEX_TABLE(P_SCHEMA_MASK TEXT, P_TABLE_MASK TEXT) RETURNS VOID AS $$
DECLARE
 idx TEXT;
BEGIN
 	FOR idx IN SELECT indexname FROM pg_indexes
	 WHERE schemaname LIKE p_schema_mask AND tablename LIKE p_table_mask
	 LOOP
 	EXECUTE format('REINDEX (VERBOSE) INDEX %I', idx);
 	END LOOP;
END;
$$ LANGUAGE PLPGSQL; 

--TEST FUNCTION
SELECT *,
	GET_CLIENT_CODE(CLIENT.*)
FROM CLIENT

SELECT *,
	GET_CLIENT_CODE2(CLIENT.*)
FROM CLIENT

SELECT FRAME_BY_MANUFACTURER('Gucci');

SELECT *
FROM FRAME_BY_MANUFACTURER('Gucci') -- Ładnie sformatowane

SELECT MANUFACTURER
FROM FRAME_BY_MANUFACTURER('Gucci');

SELECT (FRAME_BY_MANUFACTURER('')).MANUFACTURER;

SELECT (FRAME_BY_MANUFACTURER('Gucci')).*; --ładnie sformatowane

SELECT MANUFACTURER(FRAME_BY_MANUFACTURER('Gucci'));

SELECT * FROM AVG_POWER_GLASSES;

SELECT * FROM frame_popularity_2();

SELECT * FROM FRAME_POPULARITY_3();

SELECT * FROM top_frame_glass(); 

SELECT adm_reindex_table('public', 'address'); 