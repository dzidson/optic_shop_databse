CREATE TABLE FRAME (FRAME_ID SERIAL NOT NULL
					,MANUFACTURER CHARACTER VARYING(100)
					,PRODUCT_CODE CHARACTER VARYING(50) NOT NULL
					,SIZE_CM SMALLINT NOT NULL
					,CONSTRAINT FRAME_PK PRIMARY KEY (FRAME_ID)
				   );

CREATE TABLE GLASSES(GLASSES_ID SERIAL PRIMARY KEY,
					POWER_LEFT DECIMAL(5, 2) NOT NULL,
					POWER_RIGHT DECIMAL(5, 2) NOT NULL,
					FRAME_ID INT REFERENCES FRAME(FRAME_ID));


CREATE TABLE CLIENT(CLIENT_ID SERIAL PRIMARY KEY
					,LAST_NAME VARCHAR(20) NOT NULL
					,FIRST_NAME VARCHAR(20) NOT NULL
					,POSTAL_CODE TEXT NOT NULL
					,CITY TEXT NOT NULL
					,STREET TEXT NOT NULL
					,HOME_NUMBER TEXT NOT NULL 
					,PHONE_NUMBER TEXT NOT NULL);
					


CREATE TABLE WORK_ORDER(WORK_ORDER_ID SERIAL PRIMARY KEY 
						,CLIENT_ID INT NOT NULL REFERENCES CLIENT(CLIENT_ID) 
						,GLASS_ID INT REFERENCES GLASSES(GLASSES_ID) 
						,DESCRIPTION TEXT 
						,WORK_DATE DATE NOT NULL DEFAULT CURRENT_DATE 
						,PRICE NUMERIC(10,2));

ALTER TABLE FRAME ADD COLOR VARCHAR(50),
				  ADD MATERIAL VARCHAR(50);

ALTER TABLE GLASSES RENAME POWER_LEFT TO DIOPTER_LEFT;

ALTER TABLE GLASSES RENAME POWER_RIGHT TO DIOPTER_RIGHT;

ALTER TABLE WORK_ORDER ALTER COLUMN PRICESET DATA TYPE NUMERIC(12,2);

ALTER TABLE WORK_ORDER ALTER COLUMN PRICE SET DEFAULT 0;

ALTER TABLE WORK_ORDER ALTER COLUMN PRICE SET NOT NULL;

ALTER TABLE CLIENT DROP COLUMN HOME_NUMBER;

ALTER TABLE CLIENT RENAME STREET TO ADDRESS;


CREATE TABLE ADDRESS(ADDRESS_ID SERIAL PRIMARY KEY
			,CITY TEXT
			,POSTAL_CODE TEXT 
			,STREET TEXT
			,HOME_NUMBER TEXT 
			,FLAT_NUMBER TEXT);

ALTER TABLE CLIENT DROP COLUMN CITY;
ALTER TABLE CLIENT DROP COLUMN ADDRESS;
ALTER TABLE CLIENT DROP COLUMN POSTAL_CODE;
ALTER TABLE CLIENT ADD COLUMN ADDRESS_ID INT;
ALTER TABLE CLIENT ADD COLUMN area_code TEXT GENERATED ALWAYS AS (LEFT(phone_number,3)) STORED;
ALTER TABLE FRAME ALTER COLUMN SIZE_CM SET NOT NULL;
ALTER TABLE FRAME ALTER COLUMN MATERIAL SET NOT NULL;
ALTER TABLE FRAME ALTER COLUMN COLOR SET NOT NULL;
ALTER TABLE FRAME ALTER COLUMN COLOR SET DEFAULT 'NONE';

ALTER TABLE ADDRESS ADD UNIQUE (CITY, HOME_NUMBER, FLAT_NUMBER);

ALTER TABLE FRAME ADD CONSTRAINT PRODUCT_CODE_UNIQUE UNIQUE(PRODUCT_CODE);

ALTER TABLE FRAME DROP CONSTRAINT PRODUCT_CODE_UNIQUE;

ALTER TABLE FRAME ADD UNIQUE (PRODUCT_CODE, SIZE_CM, COLOR,MATERIAL);

SELECT *
FROM INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE
WHERE TABLE_SCHEMA = 'public'
	AND TABLE_NAME = 'frame';
 
SELECT *
FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE
WHERE TABLE_SCHEMA = 'public'
	AND TABLE_NAME = 'frame';

SELECT *
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
WHERE CONSTRAINT_TYPE = 'PRIMARY KEY'
	AND CONSTRAINT_SCHEMA = 'public';
 
SELECT *
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_TYPE = 'BASE TABLE'
	AND TABLE_SCHEMA = 'public';


--pokaż tabele które nie mają primary key
SELECT T.TABLE_SCHEMA,
	T.TABLE_NAME,
	T.TABLE_TYPE,
	C.CONSTRAINT_NAME,
	C.CONSTRAINT_TYPE
FROM INFORMATION_SCHEMA.TABLES AS T
LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS C ON T.TABLE_NAME = C.TABLE_NAME
AND T.TABLE_SCHEMA = C.TABLE_SCHEMA
AND c.constraint_type = 'PRIMARY KEY'
WHERE T.TABLE_SCHEMA = 'public'
	AND T.TABLE_TYPE = 'BASE TABLE'
	AND c.constraint_type IS NULL;
	

SELECT T.TABLE_SCHEMA,
	T.TABLE_NAME,
	T.TABLE_TYPE,
	C.CONSTRAINT_NAME,
	C.CONSTRAINT_TYPE
FROM INFORMATION_SCHEMA.TABLES AS T
JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS C ON T.TABLE_NAME = C.TABLE_NAME
AND T.TABLE_SCHEMA = C.TABLE_SCHEMA
AND C.CONSTRAINT_TYPE = 'PRIMARY KEY'
WHERE C.CONSTRAINT_NAME <> T.TABLE_NAME || 'key'
	AND T.TABLE_SCHEMA = 'public';

ALTER TABLE public.frame RENAME CONSTRAINT frame_pk TO frame_pkey; 

ALTER TABLE CLIENT ADD
FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID);

ALTER TABLE WORK_ORDER ADD
FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT;

ALTER TABLE WORK_ORDER ADD
FOREIGN KEY(GLASS_ID) REFERENCES GLASSES(GLASSES_ID);

ALTER TABLE WORK_ORDER RENAME GLASS_ID TO GLASSES_ID;

ALTER TABLE GLASSES ADD
FOREIGN KEY(FRAME_ID) REFERENCES FRAME(FRAME_ID);

SELECT C.CONSTRAINT_SCHEMA,
	C.CONSTRAINT_NAME,
	C.TABLE_SCHEMA,
	C.TABLE_NAME,
	C.CONSTRAINT_TYPE
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS C
WHERE C.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND C.TABLE_SCHEMA = 'public';

ALTER TABLE WORK_ORDER DROP CONSTRAINT work_order_glass_id_fkey1;
ALTER TABLE WORK_ORDER DROP CONSTRAINT work_order_client_id_fkey1;
ALTER TABLE GLASSES DROP CONSTRAINT glasses_frame_id_fkey1;

ALTER TABLE FRAME ADD CONSTRAINT FRAME_SIZE_CM_GREATER_0 CHECK(SIZE_CM > 0);


ALTER TABLE FRAME ADD CONSTRAINT FRAME_MATERIAL_SELECT 
CHECK(MATERIAL IN ('metal','plastic','other')) NOT VALID;

ALTER TABLE GLASSES ADD CONSTRAINT GLASS_DIOPTER_GREATER_0
CHECK (diopter_left > 0 and diopter_right > 0) NOT VALID;

ALTER TABLE WORK_ORDER ADD CONSTRAINT WORK_ORDER_FATE_NOT_IN_FUTURE_PLUS_30
CHECK (work_date <= CURRENT_DATE + INTERVAL '30 days');

ALTER TABLE WORK_ORDER ADD CONSTRAINT WORK_ORDER_PRICE_GRATER_0
CHECK(price>0);

SELECT *
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
WHERE CONSTRAINT_TYPE = 'CHECK'
	AND TABLE_SCHEMA = 'public';

ALTER TABLE WORK_ORDER ADD COLUMN RELATED_WORK_ORDER_ID INT NULL REFERENCES WORK_ORDER(WORK_ORDER_ID);

CREATE TABLE SERVICE(
	SERVICE_ID INT PRIMARY KEY
	,NAME TEXT);

CREATE TABLE SERVICE_GLASS(
	SERVICE_GLASS_ID INT PRIMARY KEY
	,GLASSES_ID INT NOT NULL REFERENCES GLASSES(GLASSES_ID)
	,SERVICE_ID INT NOT NULL REFERENCES SERVICE(SERVICE_ID));
	

ALTER TABLE WORK_ORDER ADD COLUMN queue_number INT DEFAULT NEXTVAL('queue_number');

CREATE TABLE EMPLOYEE (USER_NAME TEXT PRIMARY KEY,
					   ORDER_COUNT INT DEFAULT 0);
					   
CREATE TABLE operation_log 
(log_id SERIAL PRIMARY KEY, 
 log_datetime TIMESTAMP, 
 log_user TEXT, 
 log_query TEXT 
);

SELECT * FROM INFORMATION_SCHEMA.TABLES;
SELECT * FROM PG_CATALOG.PG_TABLES;
SELECT * FROM INFORMATION_SCHEMA.COLUMNS;
SELECT * FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT * FROM INFORMATION_SCHEMA.VIEWS;
SELECT * FROM INFORMATION_SCHEMA.SEQUENCES;
SELECT * FROM INFORMATION_SCHEMA.ROUTINES;

SELECT T.TABLE_SCHEMA,
	T.TABLE_NAME,
	T.TABLE_TYPE,
	C.COLUMN_NAME,
	C.DATA_TYPE,
	C.CHARACTER_MAXIMUM_LENGTH,
	C.IS_NULLABLE
FROM INFORMATION_SCHEMA.TABLES T
JOIN INFORMATION_SCHEMA.COLUMNS C ON C.TABLE_CATALOG = T.TABLE_CATALOG
AND C.TABLE_SCHEMA = T.TABLE_SCHEMA
AND C.TABLE_NAME = T.TABLE_NAME
WHERE T.TABLE_SCHEMA = 'public';